{"version":3,"sources":["img/Scene/cornerplants.svg","img/Scene/cornerplants2.svg","img/Scene/cornerplants3.svg","img/Scene/cornerplants4.svg","components/layout/Navbar.js","context/weather/weatherContext.js","components/layout/Search.js","components/layout/Results.js","context/weather/weatherReducer.js","context/types.js","context/weather/weatherState.js","App.js","index.js"],"names":["module","exports","Navbar","className","weatherContext","createContext","Search","useState","type","setType","text","setText","useContext","WeatherContext","onSubmit","e","preventDefault","alert","getData","htmlFor","name","onChange","target","value","disabled","defaultValue","Result","console","log","data","weather","sunny","clear","rain","clouds","haze","smoke","class","main","city","desc","temp","toFixed","maxTemp","minTemp","wind","speed","angle","country","id","state","action","loading","payload","sys","description","temp_max","temp_min","deg","WeatherState","props","useReducer","WeatherReducer","dispatch","setLoading","a","axios","get","process","res","Provider","children","App","src","Back1","alt","Back2","Back3","Back4","Results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d6dd659.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cornerplants.7c825722.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants2.20fce511.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants3.80aa6a78.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants4.a5f84db2.svg\";","import React, {Fragment} from 'react'\n\nexport const Navbar = () => {\n    return (\n        <Fragment>\n            <nav className=\"navbar\">\n                <div className=\"title\"><i className=\"fas fa-rainbow\" /> REALWeather</div>\n                \n            </nav>\n        </Fragment>\n    )\n}\nexport default Navbar;","import {createContext} from 'react';\nconst weatherContext = createContext();\n\nexport default weatherContext;","import React, {useState, useContext} from 'react';\nimport WeatherContext from '../../context/weather/weatherContext';\nexport const Search = () => {\n\n    const [type,setType] = useState('');\n    const [text,setText] = useState('');\n\n    const weatherContext = useContext(WeatherContext);\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const onChange = (e) => {\n        setType(e.target.value);\n        weatherContext.setType(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(text === \"\"){\n            alert(\"Please enter something\");\n        }\n        else{\n            weatherContext.getData(text);\n            setText('');\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <h4>\n                    So, how's the weather?\n                </h4>\n                <label htmlFor=\"search\">\n                    <p>{`Please enter the ${type} of the city / area`}</p>\n                </label>\n                <div className=\"row\">\n                    <input className=\"nine columns search\" type=\"text\" name=\"search\" onChange={textChange} value={text} />\n\n                    <select name=\"type\" className=\"three columns\" onChange={onChange}>\n                        <option disabled>select type</option>\n                        <option value=\"name\" defaultValue>City name</option>\n                        <option value=\"ID\">City ID</option>\n                        <option value=\"zip code\">Zip Code</option>\n                    </select>\n\n                </div>\n                \n                <input className=\"button-primary\" type=\"submit\" value=\"submit\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Search;\n","import React, { Fragment, useContext } from 'react';\nimport WeatherContext from '../../context/weather/weatherContext';\nexport const Result = () => {\n    \n    const weatherContext = useContext(WeatherContext);\n    console.log(weatherContext);\n    if(!weatherContext.data){\n        return <Fragment></Fragment>\n    }\n\n    const sunny = <i className=\"main fas fa-sun\"></i>;\n    const clear = <i className=\"main far fa-sun\"></i>;\n    const rain = <i className=\"main fas fa-cloud-showers-heavy\"></i>;\n    const clouds =<i className=\"main fas fa-cloud\"></i>;\n    const haze = <i className=\"main fas fa-smog\"></i>;\n    const smoke = <i class=\"main fas fa-smog\"></i>;\n\n    let weather;\n\n    switch(weatherContext.main){\n        case \"Clear\": weather = clear; break;\n        case \"Sunny\": weather = sunny; break;\n        case \"Rain\": weather = rain; break;\n        case \"Clouds\": weather = clouds; break;\n        case \"Haze\": weather = haze; break;\n        case \"Smoke\": weather = smoke; break;\n        default: ;\n    }\n\n    return (\n        <div className=\"result\">\n            \n            <h3>The weather in {weatherContext.city} looks like: </h3>\n            \n            <table>\n                <tbody>\n                <tr>\n                    <td>\n                        {weather}\n                    </td>\n                    <td className=\"weather\">\n                        <div>\n                            <h4 className=\"weather-main\">{weatherContext.main}</h4>\n                            <p className=\"weather-main desc\">{weatherContext.desc}</p>\n                            <strong>Temp: {(weatherContext.temp - 273.15).toFixed(2)} </strong>°C\n                        </div>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n        \n            <div>\n                <p className=\"minmax\">The highest will be <strong>{(weatherContext.maxTemp - 273.15).toFixed(2)}</strong> °C and the lowest will be <strong>{(weatherContext.minTemp - 273.15).toFixed(2)}</strong> °C </p>\n            </div>\n\n            <table> \n                <tbody>\n                <tr>\n                    <td className=\"windInfo\">\n                        <p className=\"windInfo\"><strong>Wind:</strong> {weatherContext.wind.speed} mph</p>\n                        <p><strong>Angle:</strong> {weatherContext.wind.angle}°</p>\n                    </td>\n                    <td className=\"areaInfo\">\n                        <p className=\"areaInfo\"><strong>Country:</strong> {weatherContext.country}</p>\n                        <p><strong>ID:</strong> {weatherContext.id}</p>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n\nexport default Result;\n","import {GET_DATA, SET_LOADING, SET_TRUE, SET_TYPE} from '../types';\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case SET_LOADING:     \n        return {\n            ...state,\n            loading: true\n        }\n        case GET_DATA: \n        return {\n            ...state,\n            city: action.payload.name,\n            id: action.payload.sys.id,\n            main: action.payload.weather[0].main,\n            desc: action.payload.weather[0].description,\n            country: action.payload.sys.country,\n            temp: action.payload.main.temp,\n            maxTemp: action.payload.main.temp_max,\n            minTemp: action.payload.main.temp_min, \n            wind: {\n                speed: action.payload.wind.speed,\n                angle: action.payload.wind.deg\n            },\n            loading: false,\n        }\n        case SET_TRUE: \n            return {\n                ...state,\n                data: true\n            }\n         \n        case SET_TYPE:\n            return {\n                ...state,\n                type: action.payload\n            }    \n        default: return state;\n    }\n}\n","export const GET_DATA = 'GET_DATA';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_TRUE = 'SET_TRUE';\nexport const SET_TYPE = 'SET_TYPE';","import React, { useReducer } from 'react';\nimport {SET_LOADING, GET_DATA, SET_TRUE, SET_TYPE} from '../types';\nimport axios from 'axios';\nimport WeatherContext from './weatherContext';\nimport WeatherReducer from './weatherReducer';\n\nexport const WeatherState = props => {\n    const initialState = {\n        type: '',\n        data: false,\n        loading: false,\n        city: '',\n        id: '',\n        main: '',\n        desc: '',\n        country: '',\n        temp: '',\n        maxTemp: '',\n        minTemp: '', \n        wind: {\n            speed: '',\n            angle: ''\n        }\n    }\n\n    const [state,dispatch] = useReducer(WeatherReducer, initialState);\n\n    const setLoading = () => dispatch({type: SET_LOADING});\n\n    const setType = (type) => dispatch({type: SET_TYPE, payload: type })\n\n    const getData = async (text) =>{\n        setLoading();\n        let res;\n        switch(state.type){\n           \n            case \"name\":    \n                            res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`); break;\n                \n            case \"ID\":      \n                            res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?id=${text}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`); break;\n\n            case \"zip code\":\n                            res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?zip=${text}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`); break;\n                default: ;\n        }\n\n        \n        \n        dispatch({type: GET_DATA, payload: res.data});\n        dispatch({type: SET_TRUE, payload: true})\n    }\n\n    return <WeatherContext.Provider\n                value={{\n                    type: state.type,\n                    data: state.data,\n                    city: state.city,\n                    id: state.id,\n                    main: state.main,\n                    desc: state.desc,\n                    country: state.country,\n                    temp: state.temp,\n                    maxTemp: state.maxTemp,\n                    minTemp: state.minTemp,\n                    wind: state.wind,\n                    setType,\n                    setLoading,\n                    getData\n                }}>{props.children}\n                </WeatherContext.Provider>\n}\n\nexport default WeatherState;\n\n","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/layout/Search';\nimport Results from './components/layout/Results';\nimport WeatherState from './context/weather/weatherState';\nimport './App.css';\n\n\nimport Back1 from './img/Scene/cornerplants.svg';\nimport Back2 from './img/Scene/cornerplants2.svg';\nimport Back3 from './img/Scene/cornerplants3.svg';\nimport Back4 from './img/Scene/cornerplants4.svg';\n\nconst App = () => {\n\n  return (\n    <WeatherState>\n    <div className=\"App\">\n      <img src={Back1} alt=\"backgroundImage\" className=\"img1\" />\n      <img src={Back2} alt=\"backgroundImage\" className=\"img2\" />\n      <img src={Back3} alt=\"backgroundImage\" className=\"img3\" />\n      <img src={Back4} alt=\"backgroundImage\" className=\"img4\" />\n     <Navbar />\n     <Search />\n     <Results />\n    </div>\n    </WeatherState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}