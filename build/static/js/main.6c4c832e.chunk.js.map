{"version":3,"sources":["img/Scene/15.svg","img/Scene/cornerplants.svg","img/Scene/cornerplants2.svg","img/Scene/cornerplants3.svg","img/Scene/cornerplants4.svg","components/layout/Navbar.js","context/weather/weatherContext.js","components/layout/Search.js","components/layout/Results.js","context/weather/weatherReducer.js","context/types.js","context/weather/weatherState.js","components/layout/ClearBtn.js","components/layout/ShowError.js","App.js","index.js"],"names":["module","exports","Navbar","className","weatherContext","createContext","Search","useState","type","setType","text","setText","useContext","WeatherContext","onSubmit","e","preventDefault","setError","getData","htmlFor","name","onChange","target","value","disabled","defaultValue","Result","data","unfound","src","NotFound","alt","weather","mist","sunny","clear","rain","clouds","haze","smoke","class","drizzle","main","city","desc","temp","toFixed","maxTemp","minTemp","wind","speed","angle","country","id","state","action","loading","payload","sys","description","temp_max","temp_min","deg","btn","err","weatherAPIkey","process","REACT_APP_API_KEY","WeatherState","props","useReducer","WeatherReducer","dispatch","setLoading","a","axios","get","res","response","status","Provider","clearData","setTimeout","children","ClearBtn","onClick","ShowError","App","Back1","Back2","Back3","Back4","Results","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c4c832e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/15.15bbab35.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants.7c825722.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants2.20fce511.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants3.80aa6a78.svg\";","module.exports = __webpack_public_path__ + \"static/media/cornerplants4.a5f84db2.svg\";","import React, {Fragment} from 'react'\n\nexport const Navbar = () => {\n    return (\n        <Fragment>\n            <nav className=\"navbar\">\n                <div className=\"title\"><i className=\"fas fa-rainbow\" /> REALWeather</div>\n                \n            </nav>\n        </Fragment>\n    )\n}\nexport default Navbar;","import {createContext} from 'react';\nconst weatherContext = createContext();\n\nexport default weatherContext;","import React, {useState, useContext} from 'react';\nimport WeatherContext from '../../context/weather/weatherContext';\nexport const Search = () => {\n\n    const [type,setType] = useState('name');\n    const [text,setText] = useState('');\n\n    const weatherContext = useContext(WeatherContext);\n    const textChange = (e) => {\n        setText(e.target.value);\n    }\n\n    const onChange = (e) => {\n        setType(e.target.value);\n        weatherContext.setType(e.target.value);\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(text === \"\"){\n            weatherContext.setError();\n        }\n        else{\n            weatherContext.getData(text,type);\n            setText('');\n        }\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <h4>\n                    So, how's the weather?\n                </h4>\n                <label htmlFor=\"search\">\n                    <p>{`Please enter the ${type} of the city / area`}</p>\n                </label>\n                <div className=\"row\">\n                    <input className=\"nine columns search\" type=\"text\" name=\"search\" onChange={textChange} value={text} />\n\n                    <select name=\"type\" className=\"three columns\" onChange={onChange}>\n                        <option disabled>select type</option>\n                        <option value=\"name\" defaultValue>City name</option>\n                        <option value=\"ID\">City ID</option>\n                        <option value=\"zip code\">Zip Code</option>\n                    </select>\n\n                </div>\n                \n                <input className=\"button-primary\" type=\"submit\" value=\"submit\" />\n            </form>\n        </div>\n    )\n}\n\nexport default Search;\n","import React, { Fragment, useContext } from 'react';\nimport WeatherContext from '../../context/weather/weatherContext';\nimport NotFound from '../../img/Scene/15.svg';\nexport const Result = () => {\n    \n    const weatherContext = useContext(WeatherContext);\n    if(!weatherContext.data){\n        return <Fragment></Fragment>\n    }\n\n    else if(weatherContext.unfound === true) {\n        return (\n            <div className=\"result unfound\">\n                <h3>We're sorry, we couldn't find the area you specified</h3>\n                <img src={NotFound} alt=\"Not Found\" />\n            </div>\n        )\n    }\n\n    else {\n\n        const mist = <i className=\"main fab fa-cloudsmith\"></i>\n        const sunny = <i className=\"main fas fa-sun\"></i>;\n        const clear = <i className=\"main far fa-sun\"></i>;\n        const rain = <i className=\"main fas fa-cloud-showers-heavy\"></i>;\n        const clouds =<i className=\"main fas fa-cloud\"></i>;\n        const haze = <i className=\"main fas fa-smog\"></i>;\n        const smoke = <i class=\"main fas fa-smog\"></i>;\n        const drizzle = <i class=\"main fas fa-cloud-rain\"></i>;\n        let weather;\n\n        switch(weatherContext.main){\n            case \"Clear\": weather = clear; break;\n            case \"Sunny\": weather = sunny; break;\n            case \"Rain\": weather = rain; break;\n            case \"Clouds\": weather = clouds; break;\n            case \"Haze\": weather = haze; break;\n            case \"Smoke\": weather = smoke; break;\n            case \"Mist\": weather = mist; break;\n            case \"Drizzle\": weather = drizzle; break;\n            default: ;\n        }\n    \n        return (\n            <div className=\"result\">\n                \n                <h3>The weather in {weatherContext.city} looks like: </h3>\n                \n                <table>\n                    <tbody>\n                    <tr>\n                        <td>\n                            {weather}\n                        </td>\n                        <td className=\"weather\">\n                            <div>\n                                <h4 className=\"weather-main\">{weatherContext.main}</h4>\n                                <p className=\"weather-main desc\">{weatherContext.desc}</p>\n                                <strong>Temp: {(weatherContext.temp - 273.15).toFixed(2)} </strong>°C\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            \n                <div>\n                    <p className=\"minmax\">The highest will be <strong>{(weatherContext.maxTemp - 273.15).toFixed(2)}</strong> °C and the lowest will be <strong>{(weatherContext.minTemp - 273.15).toFixed(2)}</strong> °C </p>\n                </div>\n\n                <table> \n                    <tbody>\n                    <tr>\n                        <td className=\"windInfo\">\n                            <p className=\"windInfo\"><strong>Wind:</strong> {weatherContext.wind.speed} mph</p>\n                            <p><strong>Angle:</strong> {weatherContext.wind.angle}°</p>\n                        </td>\n                        <td className=\"areaInfo\">\n                            <p className=\"areaInfo\"><strong>Country:</strong> {weatherContext.country}</p>\n                            <p><strong>ID:</strong> {weatherContext.id}</p>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n}\n\nexport default Result;\n","import {GET_DATA, SET_LOADING, SET_DATA, SET_TYPE, SET_ERROR, REMOVE_ERROR, CLEAR_DATA, SET_UNFOUND} from '../types';\n\n\nexport default (state, action) => {\n    switch(action.type){\n        case SET_LOADING:     \n            return {\n                ...state,\n                loading: true\n            }\n        case GET_DATA: \n            return {\n                ...state,\n                city: action.payload.name,\n                id: action.payload.sys.id,\n                main: action.payload.weather[0].main,\n                desc: action.payload.weather[0].description,\n                country: action.payload.sys.country,\n                temp: action.payload.main.temp,\n                maxTemp: action.payload.main.temp_max,\n                minTemp: action.payload.main.temp_min, \n                wind: {\n                    speed: action.payload.wind.speed,\n                    angle: action.payload.wind.deg\n                },\n                btn: true,\n                unfound: false,\n                loading: false,\n            }\n        case SET_DATA: \n            return {\n                ...state,\n                data: true,\n                err: false,\n                unfound: false,\n                btn: true\n            }\n         \n        case SET_TYPE:\n            return {\n                ...state,\n                type: action.payload\n            }   \n        case SET_ERROR:\n            return {\n                ...state,\n                err: true\n            }\n        case REMOVE_ERROR: \n            return {\n                ...state,\n                err: false\n            }\n        case CLEAR_DATA:\n            return {\n                ...state,\n                data: false,\n                btn: false\n            }\n        case SET_UNFOUND: \n            return {\n                ...state,\n                unfound: true\n            }\n        default: return state;\n    }\n}\n","export const GET_DATA = 'GET_DATA';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_DATA = 'SET_DATA';\nexport const SET_TYPE = 'SET_TYPE';\nexport const SET_ERROR = 'SET_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\nexport const CLEAR_BUTTON = 'CLEAR_BUTTON';\nexport const CLEAR_DATA = 'CLEAR_DATA';\nexport const SET_UNFOUND = 'SET_UNFOUND';","import React, { useReducer } from 'react';\nimport {SET_LOADING, GET_DATA, SET_DATA, SET_TYPE, SET_ERROR, REMOVE_ERROR, CLEAR_DATA, SET_UNFOUND} from '../types';\nimport axios from 'axios';\nimport WeatherContext from './weatherContext';\nimport WeatherReducer from './weatherReducer';\n\nconst weatherAPIkey = process.env.REACT_APP_API_KEY;\n\nexport const WeatherState = props => {\n    const initialState = {\n        type: '',\n        data: false,\n        loading: false,\n        city: '',\n        id: '',\n        main: '',\n        desc: '',\n        country: '',\n        temp: '',\n        maxTemp: '',\n        minTemp: '', \n        wind: {\n            speed: '',\n            angle: ''\n        },\n        unfound: false,\n        err: false,\n        btn: false\n    }\n\n\n    const [state,dispatch] = useReducer(WeatherReducer, initialState);\n\n    const setLoading = () => dispatch({type: SET_LOADING});\n\n    const setType = (type) => dispatch({type: SET_TYPE, payload: type })\n\n    const getData = async (text, type) =>{\n        setLoading();\n        let res;\n        try {\n            switch(type){\n                case \"name\":    \n                                res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${text}&appid=${weatherAPIkey}`);\n                                dispatch({type: GET_DATA, payload: res.data});\n                                dispatch({type: SET_DATA});\n                                break;\n                    \n                case \"ID\":      \n                                res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?id=${text}&appid=${weatherAPIkey}`); \n                                dispatch({type: GET_DATA, payload: res.data});\n                                dispatch({type: SET_DATA});\n                                break;\n\n                case \"zip code\":\n                                res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?zip=${text}&appid=${weatherAPIkey}`); \n                                dispatch({type: GET_DATA, payload: res.data});\n                                dispatch({type: SET_DATA});\n                                break;\n                    default: ;\n            }\n        }\n        catch(error) {\n            if(error.response.status === 404){                dispatch({type: SET_UNFOUND});\n            } \n        }\n    }\n\n    const clearData = () => {\n        dispatch({type: CLEAR_DATA});\n    }\n\n    const setError = () => {\n        dispatch({type: SET_ERROR});\n        setTimeout(() => dispatch({ type: REMOVE_ERROR }), 5000);\n    }\n\n    return <WeatherContext.Provider\n                value={{\n                    type: state.type,\n                    data: state.data,\n                    city: state.city,\n                    id: state.id,\n                    main: state.main,\n                    desc: state.desc,\n                    country: state.country,\n                    temp: state.temp,\n                    maxTemp: state.maxTemp,\n                    minTemp: state.minTemp,\n                    wind: state.wind,\n                    btn: state.btn,\n                    err: state.err,\n                    unfound: state.unfound,\n                    setType,\n                    setLoading,\n                    getData,\n                    clearData,\n                    setError\n                }}>{props.children}\n                </WeatherContext.Provider>\n}\n\nexport default WeatherState;\n\n","import React, {useContext} from 'react'\nimport WeatherContext from '../../context/weather/weatherContext';\n\nexport const ClearBtn = () => {\n    \n    const weatherContext = useContext(WeatherContext);\n\n    const clearData = () => {\n        weatherContext.clearData();\n    }\n\n    return (\n        weatherContext.btn && (<div>\n            <button onClick={clearData} className=\"clear\">Clear</button>\n        </div>)\n    )\n}\n\nexport default ClearBtn;\n","import React, {Fragment, useContext} from 'react'\nimport WeatherContext from '../../context/weather/weatherContext';\nexport const ShowError = () => {\n    const weatherContext = useContext(WeatherContext);\n    \n    return (\n        weatherContext.err && (<div className=\"alert\"><i className=\"fas fa-exclamation-circle\" /> Please enter something into the search bar.</div>)\n    )\n}\n\nexport default ShowError;","import React from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/layout/Search';\nimport Results from './components/layout/Results';\nimport WeatherState from './context/weather/weatherState';\nimport ClearBtn from './components/layout/ClearBtn';\nimport ShowError from './components/layout/ShowError';\nimport './App.css';\n\n\nimport Back1 from './img/Scene/cornerplants.svg';\nimport Back2 from './img/Scene/cornerplants2.svg';\nimport Back3 from './img/Scene/cornerplants3.svg';\nimport Back4 from './img/Scene/cornerplants4.svg';\n\nconst App = () => {\n\n  return (\n    <WeatherState>\n    <div className=\"App\">\n      <img src={Back1} alt=\"backgroundImage\" className=\"img1\" />\n      <img src={Back2} alt=\"backgroundImage\" className=\"img2\" />\n      <img src={Back3} alt=\"backgroundImage\" className=\"img3\" />\n      <img src={Back4} alt=\"backgroundImage\" className=\"img4\" />\n     <Navbar />\n     <ShowError />\n     <Search />\n     <Results />\n     <ClearBtn />\n    </div>\n    </WeatherState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}